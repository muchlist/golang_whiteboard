<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d66d2fcc-cc32-4951-9509-47c757ed0f6c" name="Default Changelist" comment="bubble sort go">
      <change afterPath="$PROJECT_DIR$/chipper/chipper1.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chipper/chipper2.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chipper/chipper_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chipper/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1lGUAl6AYzbU1B60x7TULORIXVA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\CODING\golang_whiteboard\utils" />
      <recent name="D:\CODING\golang_whiteboard\find_the_range\binary_search" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.BenchmarkChipper1 in github.com/muchlist/golang_whiteboard/chipper">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/muchlist/golang_whiteboard/chipper" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/muchlist/golang_whiteboard/chipper" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/chipper/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/muchlist/golang_whiteboard/fizz_buzz" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/muchlist/golang_whiteboard/fizz_buzz" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/fizz_buzz/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkChipper1 in github.com/muchlist/golang_whiteboard/chipper" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$/chipper" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/muchlist/golang_whiteboard/chipper" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkChipper1\E$" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkChipper2 in github.com/muchlist/golang_whiteboard/chipper" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$/chipper" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/muchlist/golang_whiteboard/chipper" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkChipper2\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestChipper in github.com/muchlist/golang_whiteboard/chipper" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$/chipper" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/muchlist/golang_whiteboard/chipper" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestChipper\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="golang_whiteboard" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.BenchmarkChipper1 in github.com/muchlist/golang_whiteboard/chipper" />
        <item itemvalue="Go Test.BenchmarkChipper2 in github.com/muchlist/golang_whiteboard/chipper" />
        <item itemvalue="Go Test.TestChipper in github.com/muchlist/golang_whiteboard/chipper" />
        <item itemvalue="Go Build.go build github.com/muchlist/golang_whiteboard/chipper" />
        <item itemvalue="Go Build.go build github.com/muchlist/golang_whiteboard/fizz_buzz" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Binary Search imp" />
    <MESSAGE value="find range" />
    <MESSAGE value="add utils func" />
    <MESSAGE value="bubble sort go" />
    <option name="LAST_COMMIT_MESSAGE" value="bubble sort go" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>